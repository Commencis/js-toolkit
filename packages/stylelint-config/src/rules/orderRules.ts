import { createAtRule, createLogicalGroup, createRule } from '@/utils';

export const orderRules = {
  'declaration-empty-line-before': null,
  'order/order': [
    'custom-properties',
    'dollar-variables',
    createAtRule('include', false),
    'declarations',
    createRule('::selection'),
    createRule('::backdrop'),
    createRule('::before'),
    createRule('::after'),
    createRule('::marker'),
    createRule('::first-line'),
    createRule('::first-letter'),
    createRule('::cue'),
    createRule('::cue-region'),
    createRule('::placeholder'),
    createRule('::file-selector-button'),
    createRule('::highlight'),
    createRule('::part'),
    createRule('::slotted'),
    createRule(':root'),
    createRule(':lang'),
    createRule(':scope'),
    createRule(':modal'),
    createRule(':past'),
    createRule(':current'),
    createRule(':future'),
    createRule(':where'),
    createRule(':is'),
    createRule(':has'),
    createRule(':not'),
    createRule(':empty'),
    createRule(':target'),
    createRule(':link'),
    createRule(':local-link'),
    createRule(':any-link'),
    createRule(':defined'),
    createRule(':buffering'),
    createRule(':placeholder-shown'),
    createRule(':right'),
    createRule(':left'),
    createRule(':host'),
    createRule(':host-content'),
    createRule(':only-of-type'),
    createRule(':first-of-type'),
    createRule(':nth-of-type'),
    createRule(':last-of-type'),
    createRule(':nth-last-of-type'),
    createRule(':only-child'),
    createRule(':first'),
    createRule(':first-child'),
    createRule(':nth-child'),
    createRule(':last-child'),
    createRule(':nth-last-child'),
    createRule(':default'),
    createRule(':enabled'),
    createRule(':disabled'),
    createRule(':hover'),
    createRule(':focus'),
    createRule(':focus-within'),
    createRule(':focus-visible'),
    createRule(':active'),
    createRule(':checked'),
    createRule(':visited'),
    createRule(':indeterminate'),
    createRule(':in-range'),
    createRule(':out-of-range'),
    createRule(':valid'),
    createRule(':invalid'),
    createRule(':user-valid'),
    createRule(':user-invalid'),
    createRule(':read-only'),
    createRule(':read-write'),
    createRule(':optional'),
    createRule(':required'),
    createRule(':popover-open'),
    createRule(':fullscreen'),
    createRule(':picture-in-picture'),
    createRule(':autofill'),
    'rules',
    createAtRule('include', true),
    'at-rules',
  ],
  'order/properties-order': [
    [
      createLogicalGroup('All', ['all', 'page']),
      createLogicalGroup('Print', [
        'break-before',
        'break-inside',
        'break-after',
        'orphans',
        'widows',
      ]),
      createLogicalGroup('Actions', [
        'cursor',
        'pointer-events',
        'touch-action',
        'resize',
      ]),
      createLogicalGroup('User Actions', ['user-select', 'user-zoom'], 'never'),
      createLogicalGroup('Content', ['content', 'quotes'], 'never'),
      createLogicalGroup(
        'Counter',
        ['counter-increment', 'counter-set', 'counter-reset'],
        'never'
      ),
      createLogicalGroup(
        'List',
        [
          'list-style',
          'list-style-type',
          'list-style-position',
          'list-style-image',
        ],
        'never'
      ),
      createLogicalGroup(
        'Marker',
        ['marker', 'marker-start', 'marker-mid', 'marker-end'],
        'never'
      ),
      createLogicalGroup('Display', [
        'display',
        'opacity',
        'isolation',
        'visibility',
        'backface-visibility',
        'appearance',
      ]),
      createLogicalGroup('Gap', ['gap', 'column-gap', 'row-gap'], 'never'),
      createLogicalGroup(
        'Alignment',
        [
          'place-content',
          'place-items',
          'place-self',
          'align-content',
          'align-items',
          'align-self',
          'justify-content',
          'justify-items',
          'justify-self',
        ],
        'never'
      ),
      createLogicalGroup('Position', [
        'position',
        'float',
        'clear',
        'offset',
        'offset-position',
        'offset-path',
        'offset-distance',
        'offset-rotate',
        'offset-anchor',
        'inset',
        'inset-block',
        'inset-block-start',
        'inset-block-end',
        'inset-inline',
        'inset-inline-start',
        'inset-inline-end',
        'top',
        'right',
        'bottom',
        'left',
        'z-index',
      ]),
      createLogicalGroup(
        'Outline',
        [
          'outline',
          'outline-width',
          'outline-style',
          'outline-color',
          'outline-offset',
        ],
        'never'
      ),
      createLogicalGroup(
        'Shape',
        ['shape-outside', 'shape-margin', 'shape-image-threshold'],
        'never'
      ),
      createLogicalGroup(
        'Mask',
        [
          'mask',
          'mask-border',
          'mask-border-source',
          'mask-border-slice',
          'mask-border-width',
          'mask-border-outset',
          'mask-border-repeat',
          'mask-border-mode',
          'mask-image',
          'mask-clip',
          'mask-origin',
          'mask-type',
          'mask-size',
          'mask-position',
          'mask-repeat',
          'mask-mode',
          'mask-composite',
        ],
        'never'
      ),
      createLogicalGroup('Margin', [
        'margin',
        'margin-block',
        'margin-block-start',
        'margin-block-end',
        'margin-inline',
        'margin-inline-start',
        'margin-inline-end',
        'margin-top',
        'margin-right',
        'margin-bottom',
        'margin-left',
      ]),
      createLogicalGroup(
        'Border',
        [
          'border',
          'border-width',
          'border-style',
          'border-color',
          'border-radius',
          'border-start-start-radius',
          'border-start-end-radius',
          'border-end-start-radius',
          'border-end-end-radius',
          'border-block',
          'border-block-width',
          'border-block-style',
          'border-block-color',
          'border-block-start',
          'border-block-start-width',
          'border-block-start-style',
          'border-block-start-color',
          'border-block-end',
          'border-block-end-width',
          'border-block-end-style',
          'border-block-end-color',
          'border-inline',
          'border-inline-width',
          'border-inline-style',
          'border-inline-color',
          'border-inline-start',
          'border-inline-start-width',
          'border-inline-start-style',
          'border-inline-start-color',
          'border-inline-end',
          'border-inline-end-width',
          'border-inline-end-style',
          'border-inline-end-color',
          'border-top',
          'border-top-left-radius',
          'border-top-right-radius',
          'border-top-width',
          'border-top-style',
          'border-top-color',
          'border-right',
          'border-right-width',
          'border-right-style',
          'border-right-color',
          'border-bottom',
          'border-bottom-left-radius',
          'border-bottom-right-radius',
          'border-bottom-width',
          'border-bottom-style',
          'border-bottom-color',
          'border-left',
          'border-left-width',
          'border-left-style',
          'border-left-color',
          'border-image',
          'border-image-source',
          'border-image-slice',
          'border-image-width',
          'border-image-outset',
          'border-image-repeat',
        ],
        'never'
      ),
      createLogicalGroup(
        'Box',
        ['box-sizing', 'box-decoration-break', 'box-shadow'],
        'never'
      ),
      createLogicalGroup('Object', ['object-fit', 'object-position'], 'never'),
      createLogicalGroup(
        'container',
        ['container', 'container-name', 'container-type'],
        'never'
      ),
      createLogicalGroup(
        'Contain',
        [
          'contain',
          'contain-intrinsic-size',
          'contain-intrinsic-block-size',
          'contain-intrinsic-inline-size',
          'contain-intrinsic-height',
          'contain-intrinsic-width',
        ],
        'never'
      ),
      createLogicalGroup('Color', [
        'color-scheme',
        'accent-color',
        'color',
        'caret-color',
        'forced-color-adjust',
        'print-color-adjust',
      ]),
      createLogicalGroup('SVG', ['fill', 'stroke', 'paint-order'], 'never'),
      createLogicalGroup(
        'Background',
        [
          'background',
          'background-image',
          'background-color',
          'background-origin',
          'background-size',
          'background-position',
          'background-position-y',
          'background-position-x',
          'background-repeat',
          'background-attachment',
          'background-clip',
          'background-blend-mode',
        ],
        'never'
      ),
      createLogicalGroup(
        'Filter',
        ['filter', 'backdrop-filter', 'mix-blend-mode', 'clip-path'],
        'never'
      ),
      createLogicalGroup('Dimensions', [
        'aspect-ratio',
        'block-size',
        'min-block-size',
        'max-block-size',
        'inline-size',
        'min-inline-size',
        'max-inline-size',
        'height',
        'min-height',
        'max-height',
        'width',
        'min-width',
        'max-width',
      ]),
      createLogicalGroup(
        'Padding',
        [
          'padding',
          'padding-block',
          'padding-block-start',
          'padding-block-end',
          'padding-inline',
          'padding-inline-start',
          'padding-inline-end',
          'padding-top',
          'padding-right',
          'padding-bottom',
          'padding-left',
        ],
        'never'
      ),
      createLogicalGroup(
        'Overflow',
        [
          'overflow',
          'overflow-clip-margin',
          'overflow-block',
          'overflow-inline',
          'overflow-y',
          'overflow-x',
          'overflow-wrap',
          'overflow-anchor',
        ],
        'never'
      ),
      createLogicalGroup(
        'Columns',
        [
          'columns',
          'column-width',
          'column-count',
          'column-fill',
          'column-span',
          'column-rule',
          'column-rule-width',
          'column-rule-style',
          'column-rule-color',
        ],
        'never'
      ),
      createLogicalGroup('Flex', [
        'flex',
        'flex-grow',
        'flex-shrink',
        'flex-basis',
        'flex-flow',
        'flex-direction',
        'flex-wrap',
        'order',
      ]),
      createLogicalGroup('Grid', [
        'grid',
        'grid-area',
        'grid-template',
        'grid-template-areas',
        'grid-template-columns',
        'grid-template-rows',
        'grid-auto-flow',
        'grid-auto-columns',
        'grid-column',
        'grid-column-start',
        'grid-column-end',
        'grid-auto-rows',
        'grid-row',
        'grid-row-start',
        'grid-row-end',
      ]),

      createLogicalGroup('Table', [
        'table-layout',
        'border-spacing',
        'border-collapse',
        'empty-cells',
        'vertical-align',
        'caption-side',
      ]),

      createLogicalGroup('Image', ['image-orientation', 'image-rendering']),
      createLogicalGroup('Font', [
        'src',
        'font',
        'font-family',
        'font-size',
        'font-size-adjust',
        'font-weight',
        'font-style',
        'font-display',
        'font-palette',
        'font-kerning',
        'font-stretch',
        'font-optical-sizing',
        'font-language-override',
        'font-feature-settings',
        'font-synthesis',
        'font-synthesis-weight',
        'font-synthesis-style',
        'font-synthesis-small-caps',
        'font-variant',
        'font-variant-position',
        'font-variant-ligatures',
        'font-variant-numeric',
        'font-variant-emoji',
        'font-variant-caps',
        'font-variant-east-asian',
        'font-variant-alternates',
        'font-variation-settings',
      ]),
      createLogicalGroup(
        'Typography',
        [
          'unicode-bidi',
          'unicode-range',
          'tab-size',
          'direction',
          'writing-mode',
          'white-space',
          'ruby-position',
          'line-break',
          'line-height',
          'word-spacing',
          'word-wrap',
          'word-break',
          'letter-spacing',
          'hyphens',
          'hyphenate-character',
          'hyphenate-limit-chars',
          'hanging-punctuation',
        ],
        'never'
      ),
      createLogicalGroup(
        'Text',
        [
          'text-overflow',
          'text-rendering',
          'text-indent',
          'text-justify',
          'text-orientation',
          'text-shadow',
          'text-transform',
          'text-anchor',
          'text-wrap',
          'text-align',
          'text-align-last',
          'text-combine-upright',
          'text-decoration',
          'text-decoration-skip-ink',
          'text-decoration-thickness',
          'text-decoration-line',
          'text-decoration-style',
          'text-decoration-color',
          'text-emphasis',
          'text-emphasis-position',
          'text-emphasis-style',
          'text-emphasis-color',
          'text-underline-position',
          'text-underline-offset',
        ],
        'never'
      ),
      createLogicalGroup('Math', ['math-depth', 'math-style']),
      createLogicalGroup('Overscroll', [
        'overscroll-behavior',
        'overscroll-behavior-block',
        'overscroll-behavior-inline',
        'overscroll-behavior-y',
        'overscroll-behavior-x',
      ]),
      createLogicalGroup('Scroll', [
        'scroll-margin',
        'scroll-margin-block',
        'scroll-margin-block-start',
        'scroll-margin-block-end',
        'scroll-margin-inline',
        'scroll-margin-inline-start',
        'scroll-margin-inline-end',
        'scroll-margin-top',
        'scroll-margin-right',
        'scroll-margin-bottom',
        'scroll-margin-left',
        'scroll-padding',
        'scroll-padding-block',
        'scroll-padding-block-start',
        'scroll-padding-block-end',
        'scroll-padding-inline',
        'scroll-padding-inline-start',
        'scroll-padding-inline-end',
        'scroll-padding-top',
        'scroll-padding-right',
        'scroll-padding-bottom',
        'scroll-padding-left',
        'scroll-snap-type',
        'scroll-snap-align',
        'scroll-snap-stop',
        'scroll-behavior',
      ]),
      createLogicalGroup('Scrollbar', [
        'scrollbar-gutter',
        'scrollbar-width',
        'scrollbar-color',
      ]),
      createLogicalGroup('Transform', [
        'transform',
        'transform-origin',
        'transform-box',
        'transform-style',
        'translate',
        'scale',
        'rotate',
        'will-change',
        'perspective',
        'perspective-origin',
      ]),
      createLogicalGroup('Transition', [
        'transition',
        'transition-property',
        'transition-duration',
        'transition-timing-function',
        'transition-delay',
      ]),
      createLogicalGroup('Animation', [
        'animation',
        'animation-name',
        'animation-duration',
        'animation-timing-function',
        'animation-delay',
        'animation-iteration-count',
        'animation-direction',
        'animation-fill-mode',
        'animation-play-state',
        'animation-composition',
      ]),
    ],
    {
      unspecified: 'bottomAlphabetical',
      emptyLineBeforeUnspecified: 'threshold',
      emptyLineMinimumPropertyThreshold: 4,
    },
  ],
};
